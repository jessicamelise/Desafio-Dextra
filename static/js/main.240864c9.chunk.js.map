{"version":3,"sources":["assets/search.svg","assets/return.svg","components/Input.js","components/Header.js","components/Button.js","components/FooterComics.js","loadApis/api.js","components/ComicsList.js","components/Comics.js","components/ReturnPage.js","components/ComicsInformation.js","components/DetailedComics.js","components/SearchCharacters.js","routes/App.js","serviceWorker.js","index.js"],"names":["module","exports","Input","props","Header","useState","getSearch","setGetSearch","history","useHistory","location","useLocation","className","pathname","split","placeholder","onChange","e","target","value","alt","src","search","onClick","push","Button","name","FooterComics","page","previous","count","next","loadComicsApi","offset","a","fetch","getComicsApi","json","response","console","error","loadComicIdApi","id","getComicIdApi","loadComicCharactersApi","getComicCharactersApi","loadCharactersApi","getCharactersApi","loadCharactersSearchApi","getCharactersSearchApi","ComicsList","comics","setComics","useEffect","pageNumber","then","list","data","results","map","eachComic","index","key","title","thumbnail","path","extension","creators","items","length","creator","Comics","match","changePage","parseInt","params","handleClick","condition","ReturnPage","returnPage","return","goBack","ComicsInformation","infComic","setInfComic","infCharacters","setInfCharacters","comic","characters","Date","dates","date","toLocaleDateString","textObjects","text","DetailedComics","SearchCharacters","getId","setGetId","getComics","setGetComics","notFound","setNotfound","setChangePage","character","array","eachName","join","comicsPerCharacter","log","App","exact","from","to","component","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.240864c9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search.e8773304.svg\";","module.exports = __webpack_public_path__ + \"static/media/return.2eb0a72d.svg\";","import React from 'react';\r\n\r\nexport const Input = (props) => {\r\n \r\n  return (\r\n    <input {...props}></input>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport { Input } from './Input.js';\r\nimport '../App.css';\r\nimport search from '../assets/search.svg'\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nexport const Header = () => {\r\n  const [getSearch, setGetSearch] = useState(\"\");\r\n  let history = useHistory();\r\n  let location = useLocation();\r\n\r\n  const handleChange = (e) => {\r\n    setGetSearch(e.target.value);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    history.push(`/search/${getSearch}`)\r\n  };\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <section className=\"max-width\">\r\n        <p className=\"logo\">MARVEL</p>\r\n        {location.pathname.split(\"/\")[1] === \"home\" &&\r\n          <label className=\"label-header\">\r\n            <Input\r\n              className=\"input-header\"\r\n              placeholder=\"Search for characters\"\r\n              onChange={handleChange}\r\n            />\r\n            <img \r\n              className=\"search-icon\" \r\n              alt=\"search\" \r\n              src={search} \r\n              onClick={handleClick}></img>\r\n          </label> \r\n        }\r\n      </section>\r\n    </header>\r\n  );\r\n}","import React from 'react';\r\n\r\nexport const Button = (props) => {\r\n \r\n  return (\r\n    <button {...props}>{props.name}</button>\r\n  );\r\n}","import React from 'react';\r\nimport { Button } from \"./Button.js\";\r\nimport '../App.css';\r\n\r\nexport const FooterComics = (props) => {\r\n\r\n  return (\r\n    <div className=\"max-width-button\">\r\n      <Button\r\n        className={props.page <= 0 ? \"diplay-none\" : \"button-comics\"}\r\n        name=\"Previous\"\r\n        onClick={() => props.previous(\"Previous\")}\r\n      />\r\n      <Button\r\n        className={props.count < 10 ? \"diplay-none\" : \"button-comics\"}\r\n        name=\"Next\"\r\n        onClick={() => props.next(\"Next\")}\r\n      />\r\n      <p className=\"p-margin p-font-body p-align\">Page: {props.page}</p>\r\n    </div>\r\n  );\r\n}","export const loadComicsApi = async (offset) => {\r\n  try {\r\n    const getComicsApi = await fetch(`https://gateway.marvel.com/v1/public/comics?ts=1&apikey=8420b5759538c93703a1aa3af67a2199&hash=db6ec985bba99cf00b9fa4140ed9340e&limit=10&offset=${offset*10}`)\r\n    const response = await getComicsApi.json();\r\n    return response;\r\n  }\r\n  catch (err) {\r\n    console.error(\"We got a problem to fetch the information\", err)\r\n  }\r\n}\r\n\r\nexport const loadComicIdApi = async (id) => {\r\n  try {\r\n    const getComicIdApi = await fetch(`https://gateway.marvel.com/v1/public/comics/${id}?ts=1&apikey=8420b5759538c93703a1aa3af67a2199&hash=db6ec985bba99cf00b9fa4140ed9340e`)\r\n    const response = await getComicIdApi.json();\r\n    return response;\r\n  }\r\n  catch (err) {\r\n    console.error(\"We got a problem to fetch the information\", err)\r\n  }\r\n}\r\n\r\nexport const loadComicCharactersApi = async (id) => {\r\n  try {\r\n    const getComicCharactersApi = await fetch(`https://gateway.marvel.com/v1/public/comics/${id}/characters?ts=1&apikey=8420b5759538c93703a1aa3af67a2199&hash=db6ec985bba99cf00b9fa4140ed9340e`)\r\n    const response = await getComicCharactersApi.json();\r\n    return response;\r\n  }\r\n  catch (err) {\r\n    console.error(\"We got a problem to fetch the information\", err)\r\n  }\r\n}\r\n\r\nexport const loadCharactersApi = async (name) => {\r\n  try {\r\n    const getCharactersApi = await fetch(`https://gateway.marvel.com:443/v1/public/characters?ts=1&apikey=8420b5759538c93703a1aa3af67a2199&hash=db6ec985bba99cf00b9fa4140ed9340e&nameStartsWith=${name}&limit=10`)\r\n    const response = await getCharactersApi.json();\r\n    return response;\r\n  }\r\n  catch (err) {\r\n    console.error(\"We got a problem to fetch the information\", err)\r\n  }\r\n}\r\n\r\nexport const loadCharactersSearchApi = async (id, offset) => {\r\n  try {\r\n    const getCharactersSearchApi = await fetch(`http://gateway.marvel.com/v1/public/comics?ts=1&apikey=8420b5759538c93703a1aa3af67a2199&hash=db6ec985bba99cf00b9fa4140ed9340e&limit=10&offset=${offset*10}&characters=${id}`)\r\n    const response = await getCharactersSearchApi.json();\r\n    return response;\r\n  }\r\n  catch (err) {\r\n    console.error(\"We got a problem to fetch the information\", err)\r\n  }\r\n}\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport '../App.css';\r\nimport { loadComicsApi } from \"../loadApis/api.js\"\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const ComicsList = (props) => {\r\n  const [comics, setComics] = useState([]);\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    loadComicsApi(props.pageNumber).then((list) => {\r\n      setComics(list.data.results);\r\n    });\r\n  }, [props.pageNumber]);\r\n\r\n  const handleClickComic = (id) => {\r\n    history.push(`/detailed/${id}`)\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-width-main\">\r\n      {comics.map((eachComic, index) => (\r\n        <div className=\"each-comic\" key={index} onClick={() => handleClickComic(eachComic.id)}>\r\n          <img\r\n            alt={eachComic.title}\r\n            src={`${eachComic.thumbnail.path}.${eachComic.thumbnail.extension}`}\r\n            className=\"thumbnails\"\r\n          >\r\n          </img>\r\n          <p className=\"p-margin p-font-bold\">{eachComic.title}</p>\r\n          {eachComic.creators.items.length === 0 ?\r\n            <p className=\"p-margin\"></p> :\r\n            <p className=\"p-margin p-font-body\">\r\n              {eachComic.creators.items.map((creator, index) => <span className=\"list-creator\" key={index}>{creator.name}/ </span>)}\r\n            </p>\r\n          }\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport '../App.css';\r\nimport { Header } from \"../components/Header\";\r\nimport { FooterComics } from \"./FooterComics.js\";\r\nimport { ComicsList } from \"./ComicsList.js\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const Comics = ( { match } ) => {\r\n  let changePage = parseInt(match.params.page) || 0;\r\n  let history= useHistory();\r\n\r\n  const handleClick = (condition) => {\r\n    if (condition === \"Previous\") {\r\n      if (changePage >= 0) {\r\n        history.push(`/home/${changePage-1}`);\r\n      }\r\n    } else {\r\n      history.push(`/home/${changePage+1}`);\r\n    }   \r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <section className=\"main-comics\">\r\n        <ComicsList \r\n          pageNumber={changePage}\r\n        />\r\n        <FooterComics \r\n          previous={handleClick}\r\n          next={handleClick}\r\n          page={changePage}\r\n        />\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport returnPage from \"../assets/return.svg\";\r\nimport '../App.css';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const ReturnPage = (props) => {\r\n  let history = useHistory();\r\n\r\n  const handleClickReturn = () => {\r\n    props.return === \"goBack\" ? history.goBack() : history.push(\"/\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-width-return\">\r\n      <img className=\"return-icon\" alt=\"return-page\" src={returnPage} onClick={handleClickReturn}></img>\r\n    </div>\r\n  );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport '../App.css';\r\nimport { loadComicIdApi, loadComicCharactersApi } from \"../loadApis/api.js\";\r\n\r\nexport const ComicsInformation = (props) => {\r\n  const [infComic, setInfComic] = useState(null);\r\n  const [infCharacters, setInfCharacters] = useState([]);\r\n\r\n  useEffect(() => {\r\n    loadComicIdApi(props.path.id).then((comic) => {\r\n      setInfComic(comic.data.results[0]);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    loadComicCharactersApi(props.path.id).then((characters) => {\r\n      setInfCharacters(characters.data.results);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"max-width-return\">\r\n      {infComic &&\r\n        <>\r\n          <section>\r\n            <img className=\"img-detailed\" alt={infComic.title} src={`${infComic.thumbnail.path}.${infComic.thumbnail.extension}`}></img>\r\n          </section>\r\n          <aside className=\"width-aside\">\r\n            <h1 className=\"font-roboto-title font-size-title\">{infComic.title}</h1>\r\n            <h3 className=\"p-margin font-roboto-title\">On Sale Date</h3>\r\n            <h4 className=\"p-margin font-roboto-body\">{new Date(infComic.dates[0].date).toLocaleDateString()}</h4>\r\n            {infComic.creators.items.length === 0 ?\r\n              <p className=\"p-margin\"></p> :\r\n              <>\r\n                <p className=\"p-margin font-roboto-title font-size-margin\">Creators</p>\r\n                <p className=\"p-margin font-roboto-body font-size-body\">\r\n                  {infComic.creators.items.map((creator, index) => <span className=\"list-creator\" key={index}> {creator.name}/ </span>)}\r\n                </p>\r\n              </>\r\n            }\r\n            {infCharacters.length === 0 ?\r\n              <p className=\"p-margin\"></p> :\r\n              <>\r\n                <p className=\"p-margin font-roboto-title font-size-margin\">Characters</p>\r\n                <p className=\"p-margin font-roboto-body font-size-body\">\r\n                  {infCharacters.map((characters, index) => <span className=\"list-creator\" key={index}> {characters.name}/ </span>)}\r\n                </p>\r\n              </>\r\n            }\r\n            {infComic.textObjects.length === 0 ?\r\n              <p className=\"p-margin\"></p> :\r\n              <p className=\"font-roboto-body\">{infComic.textObjects[0].text}</p>\r\n            }\r\n          </aside>\r\n        </>\r\n      }\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { Header } from \"../components/Header\";\r\nimport { ReturnPage } from \"../components/ReturnPage.js\";\r\nimport { ComicsInformation } from \"../components/ComicsInformation.js\"\r\nimport '../App.css';\r\n\r\nexport const DetailedComics = ({ match }) => {\r\n \r\n  return (\r\n    <>\r\n      <Header />\r\n      <section className=\"main-comics\">\r\n        <ComicsInformation path={match.params}/>\r\n        <ReturnPage return = \"goBack\"/>\r\n      </section>\r\n    </>\r\n  );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport '../App.css';\r\nimport { Header } from \"../components/Header\";\r\nimport { ReturnPage } from \"../components/ReturnPage.js\";\r\nimport { loadCharactersApi, loadCharactersSearchApi } from \"../loadApis/api.js\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FooterComics } from \"./FooterComics.js\";\r\n\r\nexport const SearchCharacters = ({ match }) => {\r\n  const [getId, setGetId] = useState(\"\");\r\n  const [getComics, setGetComics] = useState(null);\r\n  const [notFound, setNotfound] = useState(\"\");\r\n  const [changePage, setChangePage] = useState(0);\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    loadCharactersApi(match.params.character).then((character) => {\r\n      if (character.data.results.length !== 0) {\r\n        let array = [];\r\n        character.data.results.map((eachName) => {\r\n          array.push(eachName.id);\r\n        });\r\n        setGetId(array.join(\",\"));\r\n      } else {\r\n        setNotfound(`Results not found for ${match.params.character}`);\r\n      }\r\n    })\r\n  }, [history]);\r\n\r\n  useEffect(() => {\r\n    if (getId) {\r\n      loadCharactersSearchApi(getId, changePage).then((comicsPerCharacter) => {\r\n        setGetComics(comicsPerCharacter.data);\r\n        console.log(comicsPerCharacter.data.count)\r\n      });\r\n    }\r\n  }, [getId, changePage]);\r\n\r\n  const handleClickComic = (id) => {\r\n    history.push(`/detailed/${id}`)\r\n  }\r\n\r\n  const handleClick = (condition) => {\r\n    if (condition === \"Previous\") {\r\n      if (changePage >= 0) {\r\n        history.push(`/search/${match.params.character}/${changePage-1}`);\r\n        setChangePage(changePage-1)\r\n      }\r\n    } else {\r\n      history.push(`/search/${match.params.character}/${changePage+1}`);\r\n      setChangePage(changePage+1)\r\n    }   \r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <section className=\"main-comics\">\r\n        {notFound &&\r\n          <p>{notFound}</p>\r\n        }\r\n        {getComics &&\r\n          <>\r\n            <div className=\"max-width-main\">\r\n              {getComics.results.map((eachComic, index) => (\r\n                <div className=\"each-comic\" key={index} onClick={() => handleClickComic(eachComic.id)}>\r\n                  <img\r\n                    alt={eachComic.title}\r\n                    src={`${eachComic.thumbnail.path}.${eachComic.thumbnail.extension}`}\r\n                    className=\"thumbnails\"\r\n                  >\r\n                  </img>\r\n                  <p className=\"p-margin p-font-bold\">{eachComic.title}</p>\r\n                  {eachComic.creators.items.length === 0 ?\r\n                    <p className=\"p-margin\"></p> :\r\n                    <p className=\"p-margin p-font-body\">\r\n                      {eachComic.creators.items.map((creator, index) => <span className=\"list-creator\" key={index}>{creator.name}/ </span>)}\r\n                    </p>\r\n                  }\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <FooterComics \r\n            previous={handleClick}\r\n            next={handleClick}\r\n            page={changePage}\r\n            count={getComics ? getComics.count : 10}\r\n            />\r\n          </>\r\n        }\r\n        <ReturnPage return = \"initial\"/>\r\n      </section>\r\n    </>\r\n  );\r\n}","import React from 'react';\r\nimport { Switch, Route, HashRouter, Redirect } from \"react-router-dom\";\r\nimport { Comics } from \"../components/Comics\";\r\nimport { DetailedComics } from \"../components/DetailedComics\";\r\nimport { SearchCharacters } from \"../components/SearchCharacters\";\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <HashRouter>\r\n      <Switch>\r\n        <Redirect exact from='/' to='/home'/>\r\n        <Route path=\"/home\" exact={true} component={Comics} />\r\n        <Route path=\"/home/:page\" component={Comics} />\r\n        <Route path=\"/detailed/:id\" component={DetailedComics} />\r\n        <Route path=\"/search/:character\" component={SearchCharacters} />\r\n        <Route path=\"/search/:character/:page\" component={SearchCharacters} />      \r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './routes/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}