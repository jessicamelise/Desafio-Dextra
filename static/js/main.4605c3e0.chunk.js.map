{"version":3,"sources":["assets/search.svg","assets/return.svg","components/Input.js","components/Header.js","components/Button.js","components/FooterComics.js","loadApis/api.js","components/ComicsList.js","components/Comics.js","components/ReturnPage.js","components/ComicsInformation.js","components/DetailedComics.js","routes/App.js","serviceWorker.js","index.js"],"names":["module","exports","Input","props","Header","className","placeholder","alt","src","search","Button","name","FooterComics","page","onClick","previous","next","loadComicsApi","offset","a","fetch","getComicsApi","json","response","console","error","loadComicIdApi","id","getComicIdApi","loadComicCharactersApi","getComicCharactersApi","ComicsList","useState","comics","setComics","history","useHistory","useEffect","pageNumber","then","list","data","results","map","eachComic","index","key","push","title","thumbnail","path","extension","creators","items","length","creator","Comics","match","changePage","parseInt","params","handleClick","condition","ReturnPage","returnPage","goBack","ComicsInformation","infComic","setInfComic","infCharacters","setInfCharacters","comic","characters","log","Date","dates","date","toLocaleDateString","textObjects","text","DetailedComics","App","exact","from","to","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.4605c3e0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search.e8773304.svg\";","module.exports = __webpack_public_path__ + \"static/media/return.2eb0a72d.svg\";","import React from 'react';\r\n\r\nexport const Input = (props) => {\r\n \r\n  return (\r\n    <input {...props}></input>\r\n  );\r\n}","import React from 'react';\r\nimport { Input } from './Input.js';\r\nimport '../App.css';\r\nimport search from '../assets/search.svg'\r\n\r\nexport const Header = () => {\r\n    // const [characters, setCharacters] = useState(\"\");\r\n\r\n    // const handleSearchCharacters = (e) => {\r\n    //     setCharacters(e.target.value);\r\n    //   };\r\n \r\n  return (\r\n    <header className=\"header\">\r\n        <section className=\"max-width\">\r\n            <p className=\"logo\">MARVEL</p>\r\n            <label className=\"label-header\">\r\n            <Input \r\n                className=\"input-header\" \r\n                placeholder=\"Pesquise personagens...\"\r\n                // onBlur={handleSearchCharacters}\r\n            />\r\n            <img className=\"search-icon\" alt=\"search\" src={search}></img>\r\n            </label>\r\n        </section>\r\n    </header>\r\n  );\r\n}","import React from 'react';\r\n\r\nexport const Button = (props) => {\r\n \r\n  return (\r\n    <button {...props}>{props.name}</button>\r\n  );\r\n}","import React from 'react';\r\nimport { Button } from \"./Button.js\";\r\nimport '../App.css';\r\n\r\nexport const FooterComics = (props) => {\r\n\r\n  return (\r\n    <div className=\"max-width-button\">\r\n      <Button\r\n        className={props.page <= 0 ? \"diplay-none\" : \"button-comics\"}\r\n        name=\"Previous\"\r\n        onClick={() => props.previous(\"Previous\")}\r\n      />\r\n      <Button\r\n        className=\"button-comics\"\r\n        name=\"Next\"\r\n        onClick={() => props.next(\"Next\")}\r\n      />\r\n      <p className=\"p-margin p-font-body p-align\">Page: {props.page}</p>\r\n    </div>\r\n  );\r\n}","export const loadComicsApi = async (offset) => {\r\n  try {\r\n    const getComicsApi = await fetch(`https://gateway.marvel.com/v1/public/comics?ts=1&apikey=8420b5759538c93703a1aa3af67a2199&hash=db6ec985bba99cf00b9fa4140ed9340e&limit=10&offset=${offset*10}`)\r\n    const response = await getComicsApi.json();\r\n    return response;\r\n  }\r\n  catch (err) {\r\n    console.error(\"We got a problem to fetch the information\", err)\r\n  }\r\n}\r\n\r\nexport const loadComicIdApi = async (id) => {\r\n  try {\r\n    const getComicIdApi = await fetch(`https://gateway.marvel.com/v1/public/comics/${id}?ts=1&apikey=8420b5759538c93703a1aa3af67a2199&hash=db6ec985bba99cf00b9fa4140ed9340e`)\r\n    const response = await getComicIdApi.json();\r\n    return response;\r\n  }\r\n  catch (err) {\r\n    console.error(\"We got a problem to fetch the information\", err)\r\n  }\r\n}\r\n\r\nexport const loadComicCharactersApi = async (id) => {\r\n  try {\r\n    const getComicCharactersApi = await fetch(`https://gateway.marvel.com/v1/public/comics/${id}/characters?ts=1&apikey=8420b5759538c93703a1aa3af67a2199&hash=db6ec985bba99cf00b9fa4140ed9340e`)\r\n    const response = await getComicCharactersApi.json();\r\n    return response;\r\n  }\r\n  catch (err) {\r\n    console.error(\"We got a problem to fetch the information\", err)\r\n  }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport '../App.css';\r\nimport { loadComicsApi } from \"../loadApis/api.js\"\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const ComicsList = (props) => {\r\n  const [comics, setComics] = useState([]);\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    loadComicsApi(props.pageNumber).then((list) => {\r\n      setComics(list.data.results);\r\n    });\r\n  }, [props.pageNumber]);\r\n\r\n  const handleClickComic = (id) => {\r\n    history.push(`/detailed/${id}`)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"max-width-main\">\r\n        {comics.map((eachComic, index) => (\r\n          <div className=\"each-comic\" key={index} onClick={() => handleClickComic(eachComic.id)}>\r\n            <img\r\n              alt={eachComic.title}\r\n              src={`${eachComic.thumbnail.path}.${eachComic.thumbnail.extension}`}\r\n              className=\"thumbnails\"\r\n            >\r\n            </img>\r\n            <p className=\"p-margin p-font-bold\">{eachComic.title}</p>\r\n            {eachComic.creators.items.length === 0 ?\r\n              <p className=\"p-margin\"></p> :\r\n              <p className=\"p-margin p-font-body\">\r\n                {eachComic.creators.items.map((creator, index) => <span className=\"list-creator\" key={index}>{creator.name}/ </span>)}\r\n              </p>\r\n            }\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport '../App.css';\r\nimport { Header } from \"../components/Header\";\r\nimport { FooterComics } from \"./FooterComics.js\";\r\nimport { ComicsList } from \"./ComicsList.js\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const Comics = ( { match } ) => {\r\n  let changePage = parseInt(match.params.page) || 0;\r\n  let history= useHistory();\r\n\r\n  const handleClick = (condition) => {\r\n    if (condition === \"Previous\") {\r\n      if (changePage >= 0) {\r\n        history.push(`/home/${changePage-1}`);\r\n      }\r\n    } else {\r\n      history.push(`/home/${changePage+1}`);\r\n    }   \r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <section className=\"main-comics\">\r\n        <ComicsList \r\n          pageNumber={changePage}\r\n        />\r\n        <FooterComics \r\n          previous={handleClick}\r\n          next={handleClick}\r\n          page={changePage}\r\n        />\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport returnPage from \"../assets/return.svg\";\r\nimport '../App.css';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const ReturnPage = () => {\r\n  let history = useHistory();\r\n\r\n  const handleClickReturn = () => {\r\n    history.goBack();\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-width-return\">\r\n      <img className=\"return-icon\" alt=\"return-page\" src={returnPage} onClick={handleClickReturn}></img>\r\n    </div>\r\n  );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport '../App.css';\r\nimport { loadComicIdApi, loadComicCharactersApi } from \"../loadApis/api.js\";\r\n\r\nexport const ComicsInformation = (props) => {\r\n  const [infComic, setInfComic] = useState(null);\r\n  const [infCharacters, setInfCharacters] = useState([]);\r\n\r\n  useEffect(() => {\r\n    loadComicIdApi(props.path.id).then((comic) => {\r\n      setInfComic(comic.data.results[0]);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    loadComicCharactersApi(props.path.id).then((characters) => {\r\n      setInfCharacters(characters.data.results);\r\n      console.log(characters.data.results)\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"max-width-return\">\r\n      {infComic &&\r\n        <>\r\n          <section>\r\n            <img className=\"img-detailed\" alt={infComic.title} src={`${infComic.thumbnail.path}.${infComic.thumbnail.extension}`}></img>\r\n          </section>\r\n          <aside className=\"width-aside\">\r\n            <h1 className=\"font-roboto-title font-size-title\">{infComic.title}</h1>\r\n            <h3 className=\"p-margin font-roboto-title\">On Sale Date</h3>\r\n            <h4 className=\"p-margin font-roboto-body\">{new Date(infComic.dates[0].date).toLocaleDateString()}</h4>\r\n            {infComic.creators.items.length === 0 ?\r\n              <p className=\"p-margin\"></p> :\r\n              <>\r\n                <p className=\"p-margin font-roboto-title font-size-margin\">Creators</p>\r\n                <p className=\"p-margin font-roboto-body font-size-body\">\r\n                  {infComic.creators.items.map((creator, index) => <span className=\"list-creator\" key={index}> {creator.name}/ </span>)}\r\n                </p>\r\n              </>\r\n            }\r\n            {infCharacters.length === 0 ?\r\n              <p className=\"p-margin\"></p> :\r\n              <>\r\n                <p className=\"p-margin font-roboto-title font-size-margin\">Characters</p>\r\n                <p className=\"p-margin font-roboto-body font-size-body\">\r\n                  {infCharacters.map((characters, index) => <span className=\"list-creator\" key={index}> {characters.name}/ </span>)}\r\n                </p>\r\n              </>\r\n            }\r\n            {infComic.textObjects.length === 0 ?\r\n              <p className=\"p-margin\"></p> :\r\n              <p className=\"font-roboto-body\">{infComic.textObjects[0].text}</p>\r\n            }\r\n          </aside>\r\n        </>\r\n      }\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { Header } from \"../components/Header\";\r\nimport { ReturnPage } from \"../components/ReturnPage.js\";\r\nimport { ComicsInformation } from \"../components/ComicsInformation.js\"\r\nimport '../App.css';\r\n\r\nexport const DetailedComics = ({ match }) => {\r\n \r\n  return (\r\n    <>\r\n      <Header />\r\n      <section className=\"main-comics\">\r\n        <ComicsInformation path={match.params}/>\r\n        <ReturnPage />\r\n      </section>\r\n    </>\r\n  );\r\n}","import React from 'react';\r\nimport { Switch, Route, HashRouter, Redirect } from \"react-router-dom\";\r\nimport { Comics } from \"../components/Comics\";\r\nimport { DetailedComics } from \"../components/DetailedComics\";\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <HashRouter>\r\n      <Switch>\r\n        <Redirect exact from='/' to='/home'/>\r\n        <Route path=\"/home\" exact={true} component={Comics} />\r\n        <Route path=\"/home/:page\" component={Comics} />\r\n        <Route path=\"/detailed/:id\" component={DetailedComics} />        \r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './routes/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}